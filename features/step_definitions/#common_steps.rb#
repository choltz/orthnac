Then(/^page should redirect to "([^"]*)"$/) do |path|
  assert_equal path, page.current_path
end

Then(/^the "([^"]*)" block should read "([^"]*)"$/) do |selector, text|
  elements = page.all(selector)
  assert_equal text, elements.first.text
end

Given(/^I navigate to the "([^"]*)" page$/) do |route|
  visit "/#{route}"
end

Given(/^I click on the "([^"]*)" Link$/) do |link|
  click_link link
end

Then(/^the "([^"]*)" table has "([^"]*)" rows$/) do |table, count|
  assert_equal count.to_i, page.all("#{table} tbody tr").count
end

Given(/^I click "([^"]*)"$/) do |arg1|
  pending # Write code here that turns the phrase above into concrete actions
end

Then(/^the message "([^"]*)" should be displayed$/) do |arg1|
  pending # Write code here that turns the phrase above into concrete actions
end

Then(/^the "([^"]*)" field should have the value "([^"]*)"$/) do |arg1, arg2|
  pending # Write code here that turns the phrase above into concrete actions
end

Given(/^I fill in "([^"]*)" with "([^"]*)"$/) do |field, value|
  page.fill_in field, with: value
end


Then(/^the messsage "([^"]*)" should be displayed$/) do |text|
  elements = page.all.selector('#flash_message')

  assert_eqal text, elements.first.try(:text)
end

# Public: return the current relative path
def current_path
  URI.parse(current_url).path
end
